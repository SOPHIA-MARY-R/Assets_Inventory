@page "/Hardware-Logs/{Id}"
@inject FeedLogHttpClient FeedLogHttpClient
@inject MachineMasterHttpClient MachineMasterHttpClient
@inject MotherboardMasterHttpClient MotherboardMasterHttpClient
@inject PhysicalMemoryMasterHttpClient PhysicalMemoryMasterHttpClient
@inject HardDiskMasterHttpClient HardDiskMasterHttpClient
@inject KeyboardMasterHttpClient KeyboardMasterHttpClient
@inject MouseMasterHttpClient MouseMasterHttpClient
@inject MonitorMasterHttpClient MonitorMasterHttpClient
@using Fluid.Shared.Enums
@using MudBlazor.Extensions
<div class="d-flex justify-space-between">
    <div>
        <MudText Typo="Typo.h5" Color="Color.Primary">View Hardware Changes</MudText>
        <MudText Typo="Typo.body1">View and approve each hardware change here</MudText>
    </div>
    <div class="d-flex gap-x-2">
        <MudFab OnClick="@(() => navigationManager.NavigateTo("/Hardware-Logs"))" Label="Back" DisableElevation Color="Color.Dark" StartIcon="@Icons.Filled.ArrowBack" Size="Size.Small"/>
        <MudFab OnClick="SubmitAsync" Label="Accept" DisableElevation Color="Color.Primary" StartIcon="@Icons.Filled.Save" Size="Size.Small"/>
        <MudFab OnClick="IgnoreAsync" Label="Ignore" DisableElevation Color="Color.Default" StartIcon="@Icons.Filled.RemoveDone" Size="Size.Small"/>
    </div>
</div>
<MudDivider Class="my-4"/>
<MudGrid>
    <MudItem xs="12">
        <MudTextField @bind-Value="Remarks" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Reason for this hardware change" />
    </MudItem>
    <MudItem xs="12" md="3">
        <MudTextField @bind-Value="Model.MachineDetails.AssetTag" Margin="Margin.Dense" HelperText="Unchanged" Variant="Variant.Outlined" Label="Asset Tag" ReadOnly/>
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.MachineName != SysConfigFromMaster.MachineDetails.MachineName)
        {
            <MudTextField @bind-Value="Model.MachineDetails.MachineName" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.MachineName}")" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Machine Name" ReadOnly/>
        }
        else
        {
            <MudTextField @bind-Value="Model.MachineDetails.MachineName" HelperText="Unchanged" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Machine Name" ReadOnly/>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.Manufacturer != SysConfigFromMaster.MachineDetails.Manufacturer)
        {
            <MudTextField @bind-Value="Model.MachineDetails.Manufacturer" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.Manufacturer}")" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Manufacturer" ReadOnly/>
        }
        else
        {
            <MudTextField @bind-Value="Model.MachineDetails.Manufacturer" HelperText="Unchanged" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Manufacturer" ReadOnly/>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.Model != SysConfigFromMaster.MachineDetails.Model)
        {
            <MudTextField @bind-Value="Model.MachineDetails.Model" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.Model}")" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Model" ReadOnly/>
        }
        else
        {
            <MudTextField @bind-Value="Model.MachineDetails.Model" HelperText="Unchanged" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Model" ReadOnly/>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.AssetLocation != SysConfigFromMaster.MachineDetails.AssetLocation)
        {
            <MudTextField @bind-Value="Model.MachineDetails.AssetLocation" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.AssetLocation}")" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Location" ReadOnly/>
        }
        else
        {
            <MudTextField @bind-Value="Model.MachineDetails.AssetLocation" HelperText="Unchanged" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Location" ReadOnly/>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.AssetBranch != SysConfigFromMaster.MachineDetails.AssetBranch)
        {
            <MudTextField @bind-Value="Model.MachineDetails.AssetBranch" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.AssetBranch}")" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Branch" ReadOnly/>
        }
        else
        {
            <MudTextField @bind-Value="Model.MachineDetails.AssetBranch" HelperText="Unchanged" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Branch" ReadOnly/>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.MachineType != SysConfigFromMaster.MachineDetails.MachineType)
        {
            <MudSelect @bind-Value="Model.MachineDetails.MachineType" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.MachineType}")" Margin="Margin.Dense" Dense AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Label="Machine Type" ReadOnly>
                @foreach (var value in Enum.GetValues<MachineType>())
                {
                    <MudSelectItem Value="@value">@value.ToString()</MudSelectItem>
                }
            </MudSelect>
        }
        else
        {
            <MudSelect @bind-Value="Model.MachineDetails.MachineType" HelperText="Unchanged" Margin="Margin.Dense" Dense AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Label="Machine Type" ReadOnly>
                @foreach (var value in Enum.GetValues<MachineType>())
                {
                    <MudSelectItem Value="@value">@value.ToString()</MudSelectItem>
                }
            </MudSelect>
        }
    </MudItem>
    <MudItem xs="12" md="3">
        @if (SysConfigFromFeedLog.MachineDetails.UseType != SysConfigFromMaster.MachineDetails.UseType)
        {
            <MudSelect @bind-Value="Model.MachineDetails.UseType" Error Margin="Margin.Dense" ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.UseType}")" Dense AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Label="Use Type" ReadOnly>
                @foreach (var value in Enum.GetValues<MachineUseType>())
                {
                    <MudSelectItem Value="@value">@value.ToString()</MudSelectItem>
                }
            </MudSelect>
        }
        else
        {
            <MudSelect @bind-Value="Model.MachineDetails.UseType" Margin="Margin.Dense" HelperText="Unchanged" Dense AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Label="Use Type" ReadOnly>
                @foreach (var value in Enum.GetValues<MachineUseType>())
                {
                    <MudSelectItem Value="@value">@value.ToString()</MudSelectItem>
                }
            </MudSelect>
        }
    </MudItem>
    @if (SysConfigFromFeedLog.MachineDetails.UseType == MachineUseType.PersonUse)
    {
        <MudItem xs="12" md="3">
            @if (SysConfigFromFeedLog.MachineDetails.AssignedPersonName != SysConfigFromMaster.MachineDetails.AssignedPersonName)
            {
                <MudTextField @bind-Value="Model.MachineDetails.AssignedPersonName" Error ErrorText="@($"Old Value: {SysConfigFromMaster.MachineDetails.AssignedPersonName}")" Margin=Margin.Dense Variant=Variant.Outlined Label="Assigned Person Name" ReadOnly/>
            }
            else
            {
                <MudTextField @bind-Value="Model.MachineDetails.AssignedPersonName" HelperText="Unchanged" Margin=Margin.Dense Variant=Variant.Outlined Label="Assigned Person Name" ReadOnly/>
            }
        </MudItem>
    }
</MudGrid>
<MudDivider Class="my-4"/>
<MudText Typo="Typo.button">HARDWARE COMPONENTS</MudText>
<MudPaper Outlined Class="mt-4">
<MudExpansionPanels Elevation="0">
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex mr-4">
                <MudText Typo="Typo.h6">Motherboard</MudText>
                <MudBadge Class="ml-2" Content="Model.Motherboards.Count" Color="Color.Secondary" Origin="Origin.CenterRight"/>
            </div>
        </TitleContent>
        <ChildContent>
            <MudTable Elevation="0" Outlined Dense Bordered HorizontalScrollbar Items="Model.Motherboards">
                <HeaderContent>
                    <MudTh>Serial Number</MudTh>
                    <MudTh>Manufacturer</MudTh>
                    <MudTh>Model</MudTh>
                    <MudTh>Description</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.OemSerialNo
                        <br/>
                        @switch (context.HardwareChangeMode)
                        {
                            case HardwareChangeMode.Unchanged:
                                <MudChip Color="Color.Success" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedExisting:
                                <MudChip Color="Color.Primary" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedNew:
                                <MudChip Color="Color.Info" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.Deleted:
                                <MudChip Color="Color.Error" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </MudTd>
                    <MudTd>@context.Manufacturer</MudTd>
                    <MudTd>@context.Model</MudTd>
                    <MudTd>@context.Description</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    No motherboards added!
                </NoRecordsContent>
            </MudTable>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex mr-4">
                <MudText Typo="Typo.h6">Physical Memories</MudText>
                <MudBadge Class="ml-2" Content="Model.PhysicalMemories.Count" Color="Color.Secondary" Origin="Origin.CenterRight"/>
            </div>
        </TitleContent>
        <ChildContent>
            <MudTable Elevation="0" Outlined Dense Bordered HorizontalScrollbar Items="Model.PhysicalMemories">
                <HeaderContent>
                    <MudTh>Serial Number</MudTh>
                    <MudTh>Manufacturer</MudTh>
                    <MudTh>Capacity</MudTh>
                    <MudTh>Speed</MudTh>
                    <MudTh>Memory Type</MudTh>
                    <MudTh>Form Factor</MudTh>
                    <MudTh>Description</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.OemSerialNo
                        <br/>
                        @switch (context.HardwareChangeMode)
                        {
                            case HardwareChangeMode.Unchanged:
                                <MudChip Color="Color.Success" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedExisting:
                                <MudChip Color="Color.Primary" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedNew:
                                <MudChip Color="Color.Info" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.Deleted:
                                <MudChip Color="Color.Error" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </MudTd>
                    <MudTd>@context.Manufacturer</MudTd>
                    <MudTd>@context.Capacity GB</MudTd>
                    <MudTd>@context.Speed Mhz</MudTd>
                    <MudTd>@context.MemoryType</MudTd>
                    <MudTd>@context.FormFactor</MudTd>
                    <MudTd>@context.Description</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    No physical memories added!
                </NoRecordsContent>
            </MudTable>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex mr-4">
                <MudText Typo="Typo.h6">Keyboard</MudText>
                <MudBadge Class="ml-2" Content="Model.Keyboards.Count" Color="Color.Secondary" Origin="Origin.CenterRight"/>
            </div>
        </TitleContent>
        <ChildContent>
            <MudTable Elevation="0" Outlined Dense Bordered HorizontalScrollbar Items="Model.Keyboards">
                <HeaderContent>
                    <MudTh>Serial Number</MudTh>
                    <MudTh>Manufacturer</MudTh>
                    <MudTh>Model</MudTh>
                    <MudTh>Description</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.OemSerialNo
                        <br/>
                        @switch (context.HardwareChangeMode)
                        {
                            case HardwareChangeMode.Unchanged:
                                <MudChip Color="Color.Success" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedExisting:
                                <MudChip Color="Color.Primary" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedNew:
                                <MudChip Color="Color.Info" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.Deleted:
                                <MudChip Color="Color.Error" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </MudTd>
                    <MudTd>@context.Manufacturer</MudTd>
                    <MudTd>@context.Model</MudTd>
                    <MudTd>@context.Description</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    No keyboards added!
                </NoRecordsContent>
            </MudTable>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex mr-4">
                <MudText Typo="Typo.h6">Monitor</MudText>
                <MudBadge Class="ml-2" Content="Model.Monitors.Count" Color="Color.Secondary" Origin="Origin.CenterRight"/>
            </div>
        </TitleContent>
        <ChildContent>
            <MudTable Elevation="0" Outlined Dense Bordered HorizontalScrollbar Items="Model.Monitors">
                <HeaderContent>
                    <MudTh>Serial Number</MudTh>
                    <MudTh>Manufacturer</MudTh>
                    <MudTh>Model</MudTh>
                    <MudTh>Panel Type</MudTh>
                    <MudTh>Has Built-In Speakers</MudTh>
                    <MudTh>Refresh Rate</MudTh>
                    <MudTh>HDMI Port Count</MudTh>
                    <MudTh>VGA Port Count</MudTh>
                    <MudTh>Description</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.OemSerialNo
                        <br/>
                        @switch (context.HardwareChangeMode)
                        {
                            case HardwareChangeMode.Unchanged:
                                <MudChip Color="Color.Success" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedExisting:
                                <MudChip Color="Color.Primary" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedNew:
                                <MudChip Color="Color.Info" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.Deleted:
                                <MudChip Color="Color.Error" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </MudTd>
                    <MudTd>@context.Manufacturer</MudTd>
                    <MudTd>@context.Model</MudTd>
                    <MudTd>@context.PanelType</MudTd>
                    <MudTd>
                        <MudCheckBox Checked="@context.HasBuiltInSpeakers" ReadOnly/>
                    </MudTd>
                    <MudTd>@context.RefreshRate</MudTd>
                    <MudTd>@context.HDMIPortCount</MudTd>
                    <MudTd>@context.VGAPortCount</MudTd>
                    <MudTd>@context.Description</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    No monitors added!
                </NoRecordsContent>
            </MudTable>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex mr-4">
                <MudText Typo="Typo.h6">Mouse</MudText>
                <MudBadge Class="ml-2" Content="Model.Mouses.Count" Color="Color.Secondary" Origin="Origin.CenterRight"/>
            </div>
        </TitleContent>
        <ChildContent>
            <MudTable Elevation="0" Outlined Dense Bordered HorizontalScrollbar Items="Model.Mouses">
                <HeaderContent>
                    <MudTh>Serial Number</MudTh>
                    <MudTh>Manufacturer</MudTh>
                    <MudTh>Model</MudTh>
                    <MudTh>IsWireless</MudTh>
                    <MudTh>Description</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        @context.OemSerialNo
                        <br/>
                        @switch (context.HardwareChangeMode)
                        {
                            case HardwareChangeMode.Unchanged:
                                <MudChip Color="Color.Success" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedExisting:
                                <MudChip Color="Color.Primary" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.AddedNew:
                                <MudChip Color="Color.Info" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            case HardwareChangeMode.Deleted:
                                <MudChip Color="Color.Error" Size="Size.Small">@context.HardwareChangeMode.ToDescriptionString()</MudChip>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                    </MudTd>
                    <MudTd>@context.Manufacturer</MudTd>
                    <MudTd>@context.Model</MudTd>
                    <MudTd>
                        <MudCheckBox Checked="@context.IsWireless" ReadOnly/>
                    </MudTd>
                    <MudTd>@context.Description</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    No mouses added!
                </NoRecordsContent>
            </MudTable>
        </ChildContent>
    </MudExpansionPanel>
</MudExpansionPanels>
</MudPaper>