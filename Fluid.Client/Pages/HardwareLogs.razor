@page "/Hardware-Logs"
@inject FeedLogHttpClient FeedLogHttpClient
@using Fluid.Shared.Enums
<MudText Typo="Typo.h5" Color="Color.Primary">Hardware Logs</MudText>
<MudText Typo="Typo.body1">See all logs from all machines here</MudText>
<MudPaper Class="pa-4 mt-4" Outlined Elevation="0">
    <div class="d-flex flex-column mb-6">
        <div class="d-flex justify-space-between">
            <div class="d-flex flex-wrap gap-x-4">
                @if (_countDetails is not null)
                {
                    <MudPaper Elevation="0" Outlined Class="px-4 py-2">@_countDetails.NewLogs New Logs</MudPaper>
                    <MudPaper Elevation="0" Outlined Class="px-4 py-2">@_countDetails.Pending Pending</MudPaper>
                    <MudPaper Elevation="0" Outlined Class="px-4 py-2">@_countDetails.Accepted Changes</MudPaper>
                    <MudPaper Elevation="0" Outlined Class="px-4 py-2">@_countDetails.NewMachines New Machine</MudPaper>
                }
            </div>
            <div class="d-flex flex-wrap">
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="GenerateReport" StartIcon="@Icons.Custom.FileFormats.FileExcel" Class="me-2">Export</MudButton>
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" OnClick="AutoValidateLogs" StartIcon="@Icons.Material.Filled.Autorenew" Class="me-2">Autovalidate</MudButton>
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="(() => _feedLogTable.ReloadServerData())" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface">Reload</MudButton>
            </div>
        </div>
        <div class="d-flex pt-6 pb-4">
            <MudGrid>
                <MudItem xs="12" sm="6" md="3">
                    <MudTextField @bind-Value="_filterModel.AssetTag" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Tag"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudTextField @bind-Value="_filterModel.MachineName" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Machine Name"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudTextField @bind-Value="_filterModel.AssetLocation" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Location"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudTextField @bind-Value="_filterModel.AssetBranch" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Asset Branch"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudTextField @bind-Value="_filterModel.AssignedPersonName" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Assigned Person"/>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudSelect @bind-Value="_filterModel.MachineType" ToStringFunc="@(new Func<MachineType?, string>(x => x == null ? "All" : x.ToString()))" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Machine Type" Dense AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem T="MachineType?" Value="null">All</MudSelectItem>
                        @foreach (var value in Enum.GetValues<MachineType>())
                        {
                            <MudSelectItem T="MachineType?" Value="@value">@value.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudSelect @bind-Value="_filterModel.LogAttendStatus" ToStringFunc="@(new Func<LogAttendStatus?, string>(x => x == null ? "All" : x.ToString()))" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Log Attend Status" Dense AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem T="LogAttendStatus?" Value="null">All</MudSelectItem>
                        @foreach (var value in Enum.GetValues<LogAttendStatus>())
                        {
                            <MudSelectItem T="LogAttendStatus?" Value="@value">@value.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="6" md="3">
                    <MudDateRangePicker AdornmentColor="Color.Inherit" @bind-DateRange="_searchDateRange" DateFormat="dd/MM/yyyy" Label="Log Date Range"
                                        Margin="Margin.Dense" PickerVariant="PickerVariant.Dialog" Variant="Variant.Outlined">
                        <PickerActions Context="picker">
                            <MudButton Color="Color.Primary" Size="Size.Small" OnClick="@(() => picker.Close(false))">Cancel</MudButton>
                            <MudButton Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small" OnClick="(() => SubmitDateRange(picker))">Ok</MudButton>
                        </PickerActions>
                    </MudDateRangePicker>
                </MudItem>
            </MudGrid>
        </div>
    </div>
    <MudTable Dense Elevation="0" HorizontalScrollbar ServerData="new Func<TableState, Task<TableData<FeedLog>>>(OnServerReloadAsync)" @ref="_feedLogTable">
        <HeaderContent>
            <MudTh>Log DateTime</MudTh>
            <MudTh>Asset Tag</MudTh>
            <MudTh>Machine Name</MudTh>
            <MudTh>Log Attend Status</MudTh>
            <MudTh>Asset Location</MudTh>
            <MudTh>Asset Branch</MudTh>
            <MudTh>Assigned Person</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.LogDateTime.ToString("dd/MM/yyyy h:mm:ss tt")</MudTd>
            <MudTd>
                @context.AssetTag
                <br/>
                <MudChip Color="Color.Secondary" Size="Size.Small">@context.MachineType</MudChip>
            </MudTd>
            <MudTd>@context.MachineName</MudTd>
            <MudTd>
                @switch (context.LogAttendStatus)
                {
                    case LogAttendStatus.Unattended:
                        <MudChip Color="Color.Dark" Size="Size.Small">@context.LogAttendStatus.ToString()</MudChip>
                        break;
                    case LogAttendStatus.AutoValidated:
                        <MudChip Color="Color.Info" Size="Size.Small">@context.LogAttendStatus.ToString()</MudChip>
                        break;
                    case LogAttendStatus.Accepted:
                        <MudChip Color="Color.Success" Size="Size.Small">@context.LogAttendStatus.ToString()</MudChip>
                        break;
                    case LogAttendStatus.Pending:
                        <MudChip Color="Color.Warning" Size="Size.Small">@context.LogAttendStatus.ToString()</MudChip>
                        break;
                    case LogAttendStatus.Ignored:
                        <MudChip Color="Color.Default" Size="Size.Small">@context.LogAttendStatus.ToString()</MudChip>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            </MudTd>
            <MudTd>@(!string.IsNullOrEmpty(context.AssetLocation) ? context.AssetLocation : "-")</MudTd>
            <MudTd>@(!string.IsNullOrEmpty(context.AssetBranch) ? context.AssetBranch : "-")</MudTd>
            <MudTd>@(!string.IsNullOrEmpty(context.AssignedPersonName) ? context.AssignedPersonName : "-")</MudTd>
            <MudTd>
                @if (context.LogAttendStatus != LogAttendStatus.Unattended && context.LogAttendStatus != LogAttendStatus.AutoValidated)
                {
                    <MudTooltip Text="View Changes">
                        <MudIconButton DisableElevation Size="Size.Small" Color="Color.Warning" Variant="Variant.Filled" Icon="@Icons.Material.Filled.OpenInNew" OnClick="@(() => navigationManager.NavigateTo($"Hardware-Logs/{context.Id}"))" />
                    </MudTooltip>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>
</MudPaper>