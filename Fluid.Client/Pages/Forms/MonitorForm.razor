@page "/MonitorForm"
@inject NavigationManager NavManager
<style>
    body{
        background-image:url('./images/background.jpg');
        background-size:cover;
        background-repeat:repeat;
    }
</style>
<div style="display: flex; align-items:center; justify-content:center; margin: auto;">
<MudPaper Class="pa-13 ma-12">
<MudForm @ref="@form">
    <div>
    <MudText Color="Color.Primary" Style="margin-bottom:20px" Typo="Typo.h5">Add Monitor record</MudText>
    <MudText></MudText>
    <MudText></MudText>
    <MudTextField Color=Color.Primary T="String" Style="margin-bottom:10px" Label="Serial Number" Variant="Variant.Outlined" Required/>
    <MudTextField T="String" Style="margin-bottom:10px" Label="Manufacturer" Variant="Variant.Outlined" Required/>
    <MudTextField T="String" Style="margin-bottom:10px" Label="Model" Variant="Variant.Outlined" Required/>
    <MudText></MudText>
    <MudText></MudText>
    <MudText></MudText>
    <MudButton Style="margin:1px" Variant="Variant.Filled" OnClick="@(async () => await Submit())" Class="justify-content-center align-content-center" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary">Submit</MudButton>
    <MudButton Style="margin:10px" Variant="Variant.Filled" OnClick="Redirect" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Delete</MudButton>
    </div>
</MudForm>
</MudPaper>
</div>
@code {
    private bool _isWireless = true;

    void Redirect()
    {
        NavManager.NavigateTo("/Assets");
    }

    [Inject] ISnackbar Snackbar { get; set; }
    MudForm form;
    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            Snackbar.Add("Submitted!", Severity.Success);
            Redirect();
        }
    }

}