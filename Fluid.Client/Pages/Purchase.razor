@page "/Purchase-Order"
@inject IDialogService DialogService
@using Fluid.Shared.Entities
<MudText Typo="@Typo.h5" Color="@Color.Primary">Purchase Order</MudText>
<EditForm Model="Model">
     <div class="d-flex flex-wrap">
        <div class="ml-auto gap-x-2 d-flex">
            <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save" ButtonType="ButtonType.Submit" DisableElevation Label="Save" />
            <MudFab Color="Color.Default" StartIcon="@Icons.Material.Filled.Clear" OnClick="@(() => navigationManager.NavigateTo("Machine-Master"))" DisableElevation Label="Cancel" />
        </div>
    </div>
    <MudDivider Class="my-4"/>
        <MudGrid>
            <MudItem xs="12" sm="6" md="3">
                <MudTextField Label="Invoice No" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="Model.InvoiceNo"/>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Variant="Variant.Outlined" Margin="Margin.Dense" Label="Purchase Date">
                        <PickerActions Context="date">
                             <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                             <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                        </PickerActions>
                    </MudDatePicker>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudTextField Label="Vendor Name" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="Model.VendorName" />
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudTextField Label="Sales man" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="Model.Salesman" />
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudTextField Label="Bought Through" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="Model.BoughtThrough"/>
            </MudItem>
        </MudGrid>
    <MudDivider Class="my-4"/>
     <MudButton Color=Color.Success Variant=Variant.Filled DisableElevation StartIcon="@Icons.Material.Filled.Add" @onclick="(() => OpenDialog(new PurchaseItem()))">Add</MudButton>
   
    <div style="margin-top:10px">
          <MudTable Dense Elevation=0 Outlined Hover HorizontalScrollbar Items="Model.PurchaseItems">
           <HeaderContent>
                <MudTh>HSN</MudTh>
                <MudTh>Serial Number</MudTh>
                <MudTh>Manufacturer</MudTh>
                <MudTh>Item Name</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Net Rate</MudTh>
                <MudTh>Price</MudTh>
            </HeaderContent>
            <RowTemplate Context="row">
                <MudTd>@row.HSN</MudTd>
                <MudTd>@row.SerialNumber</MudTd>
                <MudTd>@row.Manufacturer</MudTd>
                <MudTd>@row.ItemName</MudTd>
                <MudTd>@row.Quantity</MudTd>
                <MudTd>@row.NetRate</MudTd>
                <MudTd>@row.Price</MudTd>
            </RowTemplate>
        </MudTable>
    </div>
</EditForm>
@code
{

    [Parameter]
    public PurchaseInfo Model { get; set; } = new();

    [Parameter]
    public bool IsEditMode { get; set; } = false;
    private MudDatePicker _picker;
    private async void OpenDialog(PurchaseItem purchaseItem)
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(PurchaseItemDialog.Model), purchaseItem);
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = DialogService.Show<PurchaseItemDialog>("", parameters, options);
        var result = await dialog.Result;
        if(!result.Cancelled)
        {
            var resultItem = result.Data as PurchaseItem;
            if(Model.PurchaseItems.Any(x => x.HSN == resultItem.HSN))
                Model.PurchaseItems.Remove(Model.PurchaseItems.First(x => x.HSN == purchaseItem.HSN));
            Model.PurchaseItems.Add(resultItem);
        }
    }

}
