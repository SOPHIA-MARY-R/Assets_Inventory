@inherits LayoutComponentBase
<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudLayout>
    <MudAppBar Dense>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => _open = !_open)" />
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                     Icon="@Icons.Filled.Nightlight" Color="@Color.Inherit" Title="Switch to Dark Theme"
                     ToggledIcon="@Icons.Filled.LightMode" ToggledColor="@Color.Inherit" ToggledTitle="Switch to Light Theme"/>
        <MudIconButton Icon="@Icons.Filled.NotificationsActive" Color="Color.Inherit"/>
        <MudIconButton Icon="@Icons.Filled.AccountCircle" Color="Color.Inherit"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Asset Inventory</MudText>
        </MudDrawerHeader>
        <MudNavMenu Color="Color.Secondary" Bordered>
            <MudNavLink Href="" Icon="@Icons.Filled.Dashboard" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="Machine-Master" Icon="@Icons.Filled.Computer">Machine Master</MudNavLink>
            <MudNavLink Href="Assets" Icon="@Icons.Filled.Category">Asset Categories</MudNavLink>
            <MudNavLink Href="Hardware-Logs" Icon="@Icons.Filled.Category">Hardware Logs</MudNavLink>
            <MudNavLink Href="About" Icon="@Icons.Filled.Info">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mt-4" MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code{
    private bool _open = true;
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }


}